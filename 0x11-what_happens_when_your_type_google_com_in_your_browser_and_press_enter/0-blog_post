What Happens When You Type “https://www.google.com” In Your Browser And Press Enter?
Have you ever wondered what happens when you type "https://www.google.com" into your favorite browser and press enter? 
Several things happen behind the scenes that allow you to view the Google homepage. The following are the critical steps that occur:
1.	DNS request
A DNS (Domain Name System) lookup will happen if the website is not cached on your device. The DNS translates the "google.com" into an IP address. DNS service will reply with a list of IP addresses because "google.com" has multiple IP addresses. This procedure is like looking up a phone number in a phone book so that you can dial it; in our case, the browser needs to find out which server the website lives on, so it can send HTTP messages to the right place.
2.	TCP/IP 
The next step is establishing a connection between your computer and the Google servers using the TCP/IP (Transmission Control Protocol/Internet Protocol). TCP/IP are communication protocols that define how data should travel across the Internet. This protocol breaks down your request into small packets of data, sends them to the destination, and reassembles them on the other end. Think of TCP/IP as the operator. Once you have the phone number, you call the operator to connect you to the desired number. Similarly, TCP/IP is responsible for connecting your computer to the Google servers by breaking down the request into small packets of data and sending them over the Internet.
3.	Firewall
Before the data packets reach the Google servers, they may be checked by a firewall. The firewall checks if the request is authorized and allows legitimate requests to pass through. Think of the firewall as a bouncer. Just like a bouncer at a club checks if you have the right credentials to enter, the firewall checks if the incoming request is authorized before allowing it to pass through to the Google servers. Google does this to ensure all malicious requests are not allowed to go through based on web application firewall rules. 
4.	HTTPS/SSL 
Once the packets reach the Google servers, they are encrypted using SSL (Secure Sockets Layer) or its successor, TLS (Transport Layer Security). Think of HTTPS/SSL as a secret code. Just like you use a secret code when you share sensitive information with someone over the phone, HTTPS/SSL encrypts your data to protect it from being intercepted and read by unauthorized parties.
5.	Load-balancer
 After the packets are encrypted, they are directed to a load-balancer. The load-balancer is responsible for distributing incoming requests to multiple servers to avoid overloading a single server and to ensure that the website is available even if one of the servers fails. Think of the load-balancer as a switchboard operator. When you call a large company, the switchboard operator directs your call to the right department to avoid overloading a single line. Similarly, the load-balancer directs incoming requests to multiple servers to prevent overloading a single server and ensure the website's availability.
6.	Web server
The next step is for the request to reach a web server. Think of the web server as a receptionist. When you call a company, the receptionist greets you and forwards your call to the right person. Similarly, the web server processes the incoming request and generates a response in the form of HTML, CSS, and JavaScript files.
7.	Application server
The request may be passed on to an application server if it requires more complex processing. The application server runs the business logic and communicates with the database to retrieve or store data. Think of the application server as a manager. If your request requires more complex processing, it may be passed on to a manager for further handling. Similarly, the application server runs the business logic and communicates with the database to retrieve or store data.
8.	Database
 The database is where all the data for the website is stored. The application server communicates with the database to retrieve the data needed to generate the response for your request. Think of the database as a filing cabinet. Just like a filing cabinet stores important documents, the database stores all the data for the website. The application server communicates with the database to retrieve the data needed to generate the response for your request.
Conclusion
The entire process happens in a matter of milliseconds, allowing you to access the information you need in real-time. This figurative approach helps to understand the technical aspects of accessing a website and highlights the importance of each component in ensuring a seamless user experience.
